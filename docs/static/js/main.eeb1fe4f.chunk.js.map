{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAOd,SACK,uBACIO,KAAO,OACPC,MAAOT,EACRU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAabM,GAba,4CAAH,sDCGPO,G,KAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,GAAKC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGrC,OADAc,QAAQC,IAAKN,EAAIC,EAAOV,GAEpB,sBAAKgB,UAAY,wCAAjB,UACG,qBAAKC,IAAQjB,EAAMkB,IAAQR,IAC3B,4BAAIA,SCHFS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAErB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPe,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OAtBAC,qBAAY,WACR1B,EAASC,GACJ0B,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACPjB,KAAOoB,EACPL,SAAU,MAEhB,UAGV,CAAEtB,IAWGuB,ED1BwBM,CAAa7B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACI,qCACA,mCAAOtB,KACPsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACV,qBAAKA,UAAU,YAAf,SACG,mCAEQL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADEA,EAAIC,eEftBmB,EAAe,WACzB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KASA,OACK,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAEZ,OAAO,cAAC,EAAD,CAEEA,SAAYA,GADLA,YCnBlCgC,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.eeb1fe4f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue,...cats ]);\r\n            setInputValue('');\r\n\r\n    }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                 <input \r\n                     type = \"text\"\r\n                     value={inputValue}\r\n                    onChange = { handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n        \r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=IHtdzo7EkEG9PmQWDE873g2SYlziA9DC`;\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}\r\n","import React from 'react';\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ({id , title, url}) => {\r\n\r\n    console.log (id, title, url);\r\n    return (\r\n        <div className = \"card animate__animated animate__flash\">\r\n           <img src = { url } alt = { title }/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport 'animate.css';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3> { category }</h3> \r\n       {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n       { <div className=\"card-grid\">\r\n            <>\r\n                {\r\n                    images.map ( img  =>\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {... img}\r\n                        />\r\n                    )\r\n                }\r\n            </>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect} from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect ( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    setState({\r\n                      data : imgs,\r\n                      loading : false\r\n                  });\r\n              },3000);\r\n           \r\n    })\r\n    },[ category ])\r\n      /* useEffect ( () => {\r\n        getGifs( category ).then( imgs => setImages(imgs));\r\n    }, [ category ]) */\r\n\r\n   /*  setTimeout(() => {\r\n        setstate({\r\n            data : [1,2,3,4,5,6,7],\r\n            loading : true\r\n        },3000)\r\n    }) */\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n   /* const handleAdd = () => {\r\n       const newCategory = 'Naruto';\r\n       setCategories(cats => [...cats, newCategory ]);\r\n       //otra forma\r\n       //setCategories(['HunterXHunter, ...categories])\r\n       //setCategories([...categories,'HunterXHunter'])\r\n   } */\r\n   return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map (category => {\r\n                        \r\n                        return <GifGrid  \r\n                                 key = {category}\r\n                                 category = {category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(<GifExpertApp />,divRoot);\n\n"],"sourceRoot":""}